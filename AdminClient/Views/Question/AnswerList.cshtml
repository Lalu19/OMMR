@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "Answers List";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}
<!-- PAGE-HEADER -->
<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-file-text mr-1"></i>Admin Console</a></li>
        <li class="breadcrumb-item active" aria-current="page">Answers List</li>
    </ol>
  
</div>

<div class="row">
    <div class="col-md-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Answers List</div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="State_Tb" class="table table-striped table-bordered nowrap dataTable no-footer dtr-inline" style="width:100%">
                        <thead>
                            <tr>
                                <th><input type="checkbox" id="checkAll"></th>
                                <th>Actions</th>
                                <th>Agent Name</th>
                                <th>Agent Role</th>
                                <th>Theatre Name</th>
                                <th>Questions</th>
                                <th>Options</th>
                                <th>Answers</th>
                                <th>Time</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <br />
                <button id="deleteSelected" class="btn btn-danger">Delete Selected</button>
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script>
        // Check/Uncheck all rows when the checkAll checkbox is clicked
        $('#checkAll').on('change', function () {
            var isChecked = $(this).prop('checked');
            $('#State_Tb tbody').find('input[type="checkbox"]').prop('checked', isChecked);
        });

        // Update checkAll checkbox state based on row selection
        $('#State_Tb tbody').on('change', 'input[type="checkbox"]', function () {
            var allChecked = $('#State_Tb tbody').find('input[type="checkbox"]:checked').length === $('#State_Tb tbody tr').length;
            $('#checkAll').prop('checked', allChecked);
        });
    </script>
    <script>

        //List
        loadstate()
        async function loadstate() {
            var table = $('#State_Tb').DataTable();
            table.destroy();
            table = $('#State_Tb').dataTable({
                "paginationType": "full_numbers",
                "dom": 'Bfrtip',
                "buttons": ['excel'],
                "searching": true,
                "paging": true,
                "sort": true,
                "info": true,
                "ajax": {
                    url: "@apiUrl/api/AnswerTable/GetAnswerListFromQuestion",
                    "type": "GET",
                    "dataType": "json",
                    "headers": {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    "error": function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                },
                "order": [],
                "columns": [
                    {
                        "render": function (data, type, row) {
                            return '<input type="checkbox" class="select-row">';
                        }
                    },
                    {
                        "render": function (data, type, row) {
                            return '&nbsp&nbsp<button class="btn btn-sm btn-danger" data-target="#delete" data-id=' + row.answerTableId + ' data-title="Delete"><i class="fa fa-trash"></i></button>';
                        }
                    },
                    { "data": "agentName", "orderable": true, "visible": true },
                    { "data": "agentrole", "orderable": true, "visible": true },
                    { "data": "theatreName", "orderable": true, "visible": true },
                    { "data": "questions", "orderable": true, "visible": true },
                    { "data": "option", "orderable": true, "visible": true },
                    { "data": "answers", "orderable": true, "visible": true },
                    {
                        "data": "createdOn",
                        "render": function (data) {
                            if (data === null) return "";
                            var date = new Date(data);
                            var day = date.getDate();
                            var month = date.getMonth() + 1;
                            var year = date.getFullYear();
                            var hour = date.getHours();
                            var amOrPm = hour >= 12 ? "PM" : "AM";
                            if (hour > 12) {
                                hour = hour - 12;
                            } else if (hour === 0) {
                                hour = 12;
                            }

                            return (
                                (day < 10 ? "0" + day : day) +
                                "/" +
                                (month < 10 ? "0" + month : month) +
                                "/" +
                                year.toString().substring(2) +
                                "&nbsp;&nbsp;" +
                                (hour < 10 ? "0" + hour : hour) +
                                ":" +
                                (date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes()) +
                                " " +
                                amOrPm
                            );
                        }
                    },
                ]
            });
        }
     

        //Delete
        $('#State_Tb tbody').on('click', 'button[data-target="#delete"]', function () {
            var id = $(this).data('id');
            swal({
                html: true,
                title: "Are you sure?",
                text: "You will not be able to recover this data!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, confirm it!",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "GET",
                    url: "@apiUrl/api/AnswerTable/DeleteAnswer/" + id + "/" + @Context.Session.GetInt32("UserId"),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    dataType: "json",
                    success: function (data, statusText, xhr) {
                        if (xhr.status == 200) {
                            $('#State_Tb').DataTable().ajax.reload(null, false);
                            sweetAlert({
                                html: true,
                                title: "Answer",
                                text: "Successfully deleted!",
                                type: "success"
                            });
                        } else if (xhr.status == 202) {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else {
                            sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                        }
                    },
                    error: function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                });
            });
        });
       
    </script>

    <script>
        $('#deleteSelected').on('click', function () {
            var selectedRows = $('#State_Tb').DataTable().rows('.selected').data();

            // Check if "Select All" checkbox is checked
            var selectAllChecked = $('#checkAll').prop('checked');

            // If no individual rows are selected and "Select All" checkbox is not checked, show alert
            if (selectedRows.length === 0 && !selectAllChecked) {
                sweetAlert("Selection Alert!", "Please select at least one row to delete.", "warning");
                return;
            }

            var idsToDelete;
            // If "Select All" checkbox is checked, delete all rows
            if (selectAllChecked) {
                // Get all rows
                var allRows = $('#State_Tb').DataTable().rows().data();
                idsToDelete = allRows.toArray().map(row => row.answerTableId);
            } else {
                idsToDelete = selectedRows.toArray().map(row => row.answerTableId);
            }

            swal({
                html: true,
                title: "Are you sure?",
                text: "You will not be able to recover this data!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, confirm it!",
                closeOnConfirm: false
            }, function () {
                // AJAX call to delete selected answers
                $.ajax({
                    type: "POST",
                    //url: "@apiUrl/api/AnswerTable/DeleteSelectedAnswers",
                    url: "@apiUrl/api/AnswerTable/DeleteSelectedAnswers",
                    data: JSON.stringify(idsToDelete),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    dataType: "json",
                    success: function (data) {
                        if (data.success) {
                            $('#State_Tb').DataTable().ajax.reload(null, false);
                            sweetAlert({
                                html: true,
                                title: "Answer",
                                text: "Successfully deleted!",
                                type: "success"
                            });
                        } else {
                            sweetAlert("Validation Alert!", data.responseMsg || "Something unexpected!", "warning");
                        }
                    },
                    error: function (xhr, statusText, errorThrown) {
                        console.error("Error:", errorThrown);
                        if (xhr.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (xhr.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        } else {
                            sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                        }
                    }
                });

            });
        });


        // Add click event listener to handle row selection
        $('#State_Tb tbody').on('click', 'tr', function () {
            $(this).toggleClass('selected');
        });

    </script>
}