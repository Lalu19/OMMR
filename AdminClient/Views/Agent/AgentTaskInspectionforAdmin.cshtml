@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "Agent Task Inspection for Admin";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}
<style>
    #preloader {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
    }

    .spinner {
        border: 4px solid rgba(255, 255, 255, 0.3);
        border-top: 4px solid #fff;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

</style>

<style>
    .btndesign {
        border-radius: 10px;
    }
</style>
@*
<div class="ml-auto">
    <button type="button" id="Resendnotification" class="btn btn-info btn-icon btn-sm text-white btndesign">
        <span>
            <i class="fa fa-bell"></i>
        </span> Resend Notification
    </button>
    <button id="acceptButton" class="btn btn-success btn-icon btn-sm text-white mr-2">
        <span>
            <i class="fe fe-check"></i>
        </span> Notified
    </button>
    <button id="rejectButton" class="btn btn-danger btn-icon btn-sm text-white mr-2">
        <span>
            <i class="fe fe-x"></i>
        </span>Not Notified
    </button>
</div>*@

<div id="preloader" class="d-none">
    <div class="spinner"></div>
</div>

<div class="row">
    <div class="col-md">
        <div class="card overflow-hidden">
            <div class="card-header">
                <h3 class="card-title">Agent Task Inspection for Admin Report</h3>
                <div class="ml-auto">
                    <button type="button" id="Resendnotification" class="btn btn-info btn-icon btn-sm text-white btndesign">
                        <span>
                            <i class="fa fa-bell"></i>
                        </span> Resend Notification
                    </button>
                </div>
            </div>
          
            <div class="card-body">
                <form action="#" role="form" class="validate" id="formPost">
                    <div class="row">

                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="form-label">From Date&nbsp;</label>
                                <input type="date" class="form-control" id="FromDate">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="form-label">To Date&nbsp;</label>
                                <input type="date" class="form-control" id="ToDate">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <button type="button" id="btnSearch" class="btn btn-radius btn-success">Search</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12 col-lg-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Agent Task Inspection for Admin</div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="Agent_Tb"
                           class="table table-striped table-bordered nowrap dataTable no-footer dtr-inline"
                           style="width:100%">
                        <thead>
                            <tr>
                                <th>Notification Sent</th>
                                <th>Notifified On</th>
                                <th>Task Accepted</th>
                                <th>Task Accepted Time</th>
                                <th>Task Rejected</th>
                                <th>Task Rejected Time</th>
                                <th>State Name</th>
                                <th>Theatre Name</th>
                                <th>Agent Name</th>
                                <th>Agent Role</th>
                                <th>Agent Phone Number</th>
                                <th>Email Id</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@section scripts{
    <script>

        $(document).ready(function () {
            $("#btnSearch").click(function () {
                var fromDate = $("#FromDate").val();
                var toDate = $("#ToDate").val();
             
                //$('#acceptButton').click(function () {
                //    filterTable('Yes');
                //});

                //$('#rejectButton').click(function () {
                //    filterTable('No');
                //});

                //function filterTable(notificationStatus) {
                //    var table = $('#Agent_Tb').DataTable();

                //    // Clear any previous search filters
                //    table.search('').columns().search('').draw();
                //    table.column(0).search(notificationStatus);
                //    table.column(4).search('Primary');

                //    table.draw();
                //}
                loadAgent()
                async function loadAgent() {
                    var table = $('#Agent_Tb').DataTable();
                    table.destroy();
                    table = $('#Agent_Tb').dataTable({
                        "paginationType": "full_numbers",
                        "dom": 'Bfrtip',
                        "buttons": ['excel'],
                        "searching": true,
                        "paging": true,
                        "sort": true,
                        "info": true,
                        "ajax": {
                            "url": '@apiUrl/api/Agent/AgentTaskInspection/' + fromDate + '/' + toDate,
                            // "url": '@apiUrl/api/Agent/AgentTaskInspection',
                            "type": "GET",
                            "dataType": "json",
                            "headers": {
                                "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                            },
                            "error": function (data) {
                                if (data.status == 401) {
                                    window.location.replace('/Message/TokenExpire');
                                } else if (data.status == 403) {
                                    window.location.replace('/Message/Unauthorize');
                                }
                            }
                        },
                        "order": [],
                        "columns": [
                            {
                                "data": "notificationSent",
                                "render": function (data, type, row) {
                                    if (row.notificationSent === true) {
                                        return '<p><lable style="color: #064ef9;"">Yes</lable></br>';
                                    } else if (row.notificationSent === false) {
                                        return '<p><lable style="color: #f90669;">No</lable></br>';
                                    } else {
                                        return '';
                                    }
                                }
                            },
                            {
                                "data": "notifiedOn",
                                "render": function (data) {
                                    if (data === null) return "";
                                    var date = new Date(data);
                                    var day = date.getDate();
                                    var month = date.getMonth() + 1;
                                    var year = date.getFullYear();
                                    var hour = date.getHours();
                                    var amOrPm = hour >= 12 ? "PM" : "AM";

                                    // Convert 24-hour format to 12-hour format
                                    if (hour > 12) {
                                        hour = hour - 12;
                                    } else if (hour === 0) {
                                        hour = 12;
                                    }

                                    return (
                                        (day < 10 ? "0" + day : day) +
                                        "/" +
                                        (month < 10 ? "0" + month : month) +
                                        "/" +
                                        year.toString().substring(2) +
                                        "&nbsp;&nbsp;" +
                                        (hour < 10 ? "0" + hour : hour) +
                                        ":" +
                                        (date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes()) +
                                        " " +
                                        amOrPm
                                    );
                                }
                            },
                            {
                                "data": "taskAccepted",
                                "render": function (data, type, row) {
                                    if (row.taskAccepted === true) {
                                        return '<p><lable style="color: #064ef9;"">Yes</lable></br>';
                                    } else if (row.taskAccepted === false) {
                                        return '<p><lable style="color: #f90669;">No</lable></br>';
                                    } else {
                                        return '';
                                    }
                                }
                            },
                            {
                                "data": "taskAcceptedTime",
                                "render": function (data) {
                                    if (data === null) return "";
                                    var date = new Date(data);
                                    var day = date.getDate();
                                    var month = date.getMonth() + 1;
                                    var year = date.getFullYear();
                                    var hour = date.getHours();
                                    var amOrPm = hour >= 12 ? "PM" : "AM";

                                    // Convert 24-hour format to 12-hour format
                                    if (hour > 12) {
                                        hour = hour - 12;
                                    } else if (hour === 0) {
                                        hour = 12;
                                    }

                                    return (
                                        (day < 10 ? "0" + day : day) +
                                        "/" +
                                        (month < 10 ? "0" + month : month) +
                                        "/" +
                                        year.toString().substring(2) +
                                        "&nbsp;&nbsp;" +
                                        (hour < 10 ? "0" + hour : hour) +
                                        ":" +
                                        (date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes()) +
                                        " " +
                                        amOrPm
                                    );
                                }
                            },
                            {
                                "data": "taskRejected",
                                "render": function (data, type, row) {
                                    if (row.taskRejected === true) {
                                        return '<p><lable style="color: #064ef9;"">Yes</lable></br>';
                                    } else if (row.taskRejected === false) {
                                        return '<p><lable style="color: #f90669;">No</lable></br>';
                                    } else {
                                        return '';
                                    }
                                }
                            },
                            {
                                "data": "taskRejectedTime",
                                "render": function (data) {
                                    if (data === null) return "";
                                    var date = new Date(data);
                                    var day = date.getDate();
                                    var month = date.getMonth() + 1;
                                    var year = date.getFullYear();
                                    var hour = date.getHours();
                                    var amOrPm = hour >= 12 ? "PM" : "AM";

                                    // Convert 24-hour format to 12-hour format
                                    if (hour > 12) {
                                        hour = hour - 12;
                                    } else if (hour === 0) {
                                        hour = 12;
                                    }

                                    return (
                                        (day < 10 ? "0" + day : day) +
                                        "/" +
                                        (month < 10 ? "0" + month : month) +
                                        "/" +
                                        year.toString().substring(2) +
                                        "&nbsp;&nbsp;" +
                                        (hour < 10 ? "0" + hour : hour) +
                                        ":" +
                                        (date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes()) +
                                        " " +
                                        amOrPm
                                    );
                                }
                            },
                            { "data": "stateName", "orderable": true, "visible": true },
                            { "data": "theatreName", "orderable": true, "visible": true },
                            { "data": "agentName", "orderable": true, "visible": true },
                            { "data": "agentrole", "orderable": true, "visible": true },
                            { "data": "agentPhoneNumber", "orderable": true, "visible": true },
                            { "data": "emailId", "orderable": true, "visible": true },
                        ]
                    });
                }

            });
        });
        $("#Resendnotification").click(function () {

            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Agent/ReSendNotificationToUnsendPrimaryAgents",
                contentType: "application/json",
                headers: {
                    "Authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                success: function (data, statusText, xhr) {
                    if (xhr.status === 200) {
                        Swal.fire({
                            icon: "success",
                            title: "Notification sent to Primary Agents",
                            text: "Successfully initiated!",
                        }).then(function () {
                            location.reload(); // Refresh the page or perform other actions
                        });
                    } else {
                        Swal.fire({
                            icon: "warning",
                            title: "Notification Alert!",
                            text: "Something unexpected happened!",
                        });
                    }
                    preloader.addClass("d-none");
                },
                error: function (xhr, textStatus, errorThrown) {
                    // Handle errors in the API call for notification
                    Swal.fire({
                        icon: "warning",
                        title: "Notification Alert!",
                        text: "Error in the API call for notification: " + errorThrown,
                    });
                    preloader.addClass("d-none");
                }
            });
        });
    </script>
    }